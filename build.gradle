buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    // specify your JDBC driver
    classpath 'com.mysql:mysql-connector-j:9.1.0'
  }
}

plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.5'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.domaframework.doma.codegen' version '3.0.0'
  id 'org.domaframework.doma.compile' version '3.0.1'
}

group = 'com.github.gn5r.boot'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  implementation 'org.seasar.doma.boot:doma-spring-boot-starter:2.3.0'
  annotationProcessor 'org.seasar.doma:doma-processor:3.6.0'
}

tasks.named('test') {
  useJUnitPlatform()
}

domaCodeGen {
  dev {
    url = 'jdbc:mysql://localhost:3306/sample'
    user = 'sample'
    password = 'sample'
    schemaName = 'sample'
    templateDir = file('src/main/resources/doma')

    entity {
      packageName = 'com.github.gn5r.boot.sample.external.entity'
      namingType = org.seasar.doma.gradle.codegen.desc.NamingType.SNAKE_LOWER_CASE
      useMappedSuperclass = false
      suffix = 'Entity'
    }

    dao {
      overwrite = true
      packageName = 'com.github.gn5r.boot.sample.external.dao'
    }
  }
}